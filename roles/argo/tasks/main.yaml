---
  - name: kubernetes.core requirements are present
    become: true
    ansible.builtin.pip:
      name: kubernetes==24.2.0

  - name: Download ArgoCD manifests
    ansible.builtin.get_url:
      url: https://raw.githubusercontent.com/argoproj/argo-cd/{{ argo_version }}/manifests/install.yaml
      dest: /tmp/argocd.yaml

  - name: Namespace for ArgoCD is present
    become: true
    kubernetes.core.k8s:
      kubeconfig: /etc/rancher/k3s/k3s.yaml
      api_version: v1
      kind: namespace
      name: argocd

  - name: Install ArgoCD
    become: true
    kubernetes.core.k8s:
      kubeconfig: /etc/rancher/k3s/k3s.yaml
      namespace: argocd
      src: /tmp/argocd.yaml

  - name: ArgoCD Deployment is patched for terminating TLS in Traefik
    become: true
    kubernetes.core.k8s_json_patch:
      kubeconfig: /etc/rancher/k3s/k3s.yaml
      kind: Deployment
      namespace: argocd
      name: argocd-server
      patch:
        - op: replace
          path: /spec/template/spec/containers/0/command
          value:
            - argocd-server
            - --insecure

  - name: Certificate for ArgoCD Ingress is present
    become: true
    kubernetes.core.k8s:
      kubeconfig: /etc/rancher/k3s/k3s.yaml
      namespace: argocd
      definition:
        apiVersion: cert-manager.io/v1
        kind: Certificate
        metadata:
          name: argocd-tls
          labels:
            app.kubernetes.io/name: argocd
            app.kubernetes.io/component: argocd
            app.kubernetes.io/managed-by: ansible
        spec:
          dnsNames:
            - '{{ argo_host }}'
          issuerRef:
            kind: '{{ argo_cert_manager_issuer_kind }}'
            name: '{{ argo_cert_manager_issuer_name }}'
          secretName: argocd-cert
          usages:
            - digital signature
            - key encipherment
    when: argo_cert_manager_enabled


  - name: Ingress for ArgoCD is present
    become: true
    kubernetes.core.k8s:
      kubeconfig: /etc/rancher/k3s/k3s.yaml
      namespace: argocd
      definition:
        apiVersion: traefik.containo.us/v1alpha1
        kind: IngressRoute
        metadata:
          name: argocd-server
          labels:
            app.kubernetes.io/name: argocd
            app.kubernetes.io/component: argocd
            app.kubernetes.io/managed-by: ansible
        spec:
          entryPoints:
            - websecure
          routes:
            - kind: Rule
              match: Host(`{{ argo_host }}`)
              priority: 10
              services:
                - name: argocd-server
                  port: 80
            - kind: Rule
              match: Host(`{{ argo_host }}`) && Headers(`Content-Type`, `application/grpc`)
              priority: 11
              services:
                - name: argocd-server
                  port: 80
                  scheme: h2c
          tls:
            secretName: argocd-cert

  - name: ArgoCD metrics ServiceMonitor is present
    become: true
    kubernetes.core.k8s:
      kubeconfig: /etc/rancher/k3s/k3s.yaml
      namespace: argocd
      definition:
        apiVersion: monitoring.coreos.com/v1
        kind: ServiceMonitor
        metadata:
          name: argocd-metrics
          labels:
            release: prometheus
            app.kubernetes.io/name: argocd
            app.kubernetes.io/component: argocd
            app.kubernetes.io/managed-by: ansible
        spec:
          selector:
            matchLabels:
              app.kubernetes.io/name: argocd-metrics
          endpoints:
          - port: metrics
    when: argo_monitoring_enabled

  - name: ArgoCD server metrics ServiceMonitor is present
    become: true
    kubernetes.core.k8s:
      kubeconfig: /etc/rancher/k3s/k3s.yaml
      namespace: argocd
      definition:
        apiVersion: monitoring.coreos.com/v1
        kind: ServiceMonitor
        metadata:
          name: argocd-server-metrics
          labels:
            release: prometheus
            app.kubernetes.io/name: argocd
            app.kubernetes.io/component: argocd
            app.kubernetes.io/managed-by: ansible
        spec:
          selector:
            matchLabels:
              app.kubernetes.io/name: argocd-server-metrics
          endpoints:
          - port: metrics
    when: argo_monitoring_enabled

  - name: ArgoCD repo metrics ServiceMonitor is present
    become: true
    kubernetes.core.k8s:
      kubeconfig: /etc/rancher/k3s/k3s.yaml
      namespace: argocd
      definition:
        apiVersion: monitoring.coreos.com/v1
        kind: ServiceMonitor
        metadata:
          name: argocd-repo-server-metrics
          labels:
            release: prometheus
            app.kubernetes.io/name: argocd
            app.kubernetes.io/component: argocd
            app.kubernetes.io/managed-by: ansible
        spec:
          selector:
            matchLabels:
              app.kubernetes.io/name: argocd-repo-server
          endpoints:
          - port: metrics
    when: argo_monitoring_enabled
