---
- name: Add ArgoCD Helm repository
  become: true
  kubernetes.core.helm_repository:
    name: argo
    repo_url: https://argoproj.github.io/argo-helm

- name: ArgoCD is deployed
  become: true
  kubernetes.core.helm:
    name: argocd
    chart_ref: argo/argo-cd
    chart_version: '{{ argo_chart_version }}'
    release_namespace: argo-cd
    create_namespace: true
    kubeconfig: /etc/rancher/k3s/k3s.yaml
    update_repo_cache: true
    wait: true
    values:
      configs:
        params:
          # Disable TLS to terminate TLS in Traefik IngressRoute.
          server.insecure: true
      controller:
        metrics:
          enabled: true
          serviceMonitor:
            enabled: true
            namespace: argo-cd
            selector:
              release: prometheus
      dex:
        metrics:
          enabled: true
          serviceMonitor:
            enabled: true
            namespace: argo-cd
            selector:
              release: prometheus
      redis:
        metrics:
          enabled: true
          serviceMonitor:
            enabled: true
            namespace: argo-cd
            selector:
              release: prometheus
      server:
        metrics:
          enabled: true
          serviceMonitor:
            enabled: true
            namespace: argo-cd
            selector:
              release: prometheus
      repoServer:
        metrics:
          enabled: true
          serviceMonitor:
            enabled: true
            namespace: argo-cd
            selector:
              release: prometheus
      applicationSet:
        metrics:
          enabled: true
          serviceMonitor:
            enabled: true
            namespace: argo-cd
            selector:
              release: prometheus
      notifications:
        metrics:
          enabled: true
          serviceMonitor:
            enabled: true
            namespace: argo-cd
            selector:
              release: prometheus

# We need to define the Certificate resource for our IngressRoute because
# Cert Manager does not support picking up annotations on Traefik IngressRoutes.
- name: Certificate for ArgoCD Ingress is present
  become: true
  kubernetes.core.k8s:
    kubeconfig: /etc/rancher/k3s/k3s.yaml
    namespace: argo-cd
    definition:
      apiVersion: cert-manager.io/v1
      kind: Certificate
      metadata:
        name: argocd-tls
        labels:
          app.kubernetes.io/name: argocd
          app.kubernetes.io/component: argocd
          app.kubernetes.io/managed-by: ansible
      spec:
        dnsNames:
          - '{{ argo_host }}'
        issuerRef:
          kind: '{{ argo_cert_manager_issuer_kind }}'
          name: '{{ argo_cert_manager_issuer_name }}'
        secretName: argocd-cert
        usages:
          - digital signature
          - key encipherment
  when: argo_cert_manager_enabled

# Since routing GRPC is required, normal Ingress won't cut it.
# The chart only contains definitions for Nginx Ingress Controller, since we
# use Traefik we have to define an IngressRoute.
- name: Ingress for ArgoCD is present
  become: true
  kubernetes.core.k8s:
    kubeconfig: /etc/rancher/k3s/k3s.yaml
    namespace: argo-cd
    definition:
      apiVersion: traefik.containo.us/v1alpha1
      kind: IngressRoute
      metadata:
        name: argocd-server
        labels:
          app.kubernetes.io/name: argocd
          app.kubernetes.io/component: argocd
          app.kubernetes.io/managed-by: ansible
      spec:
        entryPoints:
          - websecure
        routes:
          - kind: Rule
            match: Host(`{{ argo_host }}`)
            priority: 10
            services:
              - name: argocd-server
                port: 80
          - kind: Rule
            match: Host(`{{ argo_host }}`) && Headers(`Content-Type`, `application/grpc`)
            priority: 11
            services:
              - name: argocd-server
                port: 80
                scheme: h2c
        tls:
          secretName: argocd-cert
