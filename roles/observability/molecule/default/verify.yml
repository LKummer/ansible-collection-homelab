---
- name: Verify
  hosts: all
  gather_facts: false
  tasks:
    - name: Verify all Kubernetes pods are running or succeeded
      become: true
      kubernetes.core.k8s_info:
        kubeconfig: /etc/rancher/k3s/k3s.yaml
        kind: Pod
      register: pod_list
      until: pod_list.resources | map(attribute="status.phase") is subset(["Running", "Succeeded"])
      retries: 6
      delay: 10

    - name: Get Grafana data sources
      ansible.builtin.uri:
        url: http://127.0.0.1/api/datasources
        url_password: admin
        url_username: admin
        force_basic_auth: true
        headers:
          Host: grafana.example.com
      register: grafana_datasources

    - name: Verify Grafana has Prometheus and Loki data sources
      ansible.builtin.assert:
        that:
          # Length is 4 because it includes Loki, Prometheus, Tempo and Alert Manager.
          - (grafana_datasources.json | length) == 4
          - '"Loki" in (grafana_datasources.json | map(attribute="typeName"))'
          - '"Prometheus" in (grafana_datasources.json | map(attribute="typeName"))'
          - '"Tempo" in (grafana_datasources.json | map(attribute="typeName"))'

    - name: Verify Loki contains logs from Promtail
      ansible.builtin.uri:
        method: POST
        url: http://127.0.0.1/api/ds/query
        url_password: admin
        url_username: admin
        force_basic_auth: true
        body:
          queries:
            - refId: A
              datasource:
                uid: '{{ grafana_datasources.json[1].uid }}'
              expr: '{exporter="OTLP"}'
              maxLines: 100
              intervalMs: 2000
          from: now-1d
          to: now+1d
        body_format: json
        headers:
          Host: grafana.example.com
      register: grafana_loki_query
      until: 0 < (grafana_loki_query.json.results.A.frames[0].data['values'][0] | length)
      retries: 3
      delay: 10

    - name: Verify Prometheus contains metrics from OpenTelemetry Collector scrape job
      ansible.builtin.uri:
        method: POST
        url: http://127.0.0.1/api/ds/query
        url_password: admin
        url_username: admin
        force_basic_auth: true
        body:
          queries:
            - refId: A
              datasource:
                uid: '{{ grafana_datasources.json[2].uid }}'
              expr: '{scrape_job="opentelemetry-collector"}'
              maxDataPoints: 100
              intervalMs: 2000
          from: now-1d
          to: now+1d
        body_format: json
        headers:
          Host: grafana.example.com
      register: grafana_prometheus_query
      until: 0 < (grafana_prometheus_query.json.results.A.frames | length)
      retries: 3
      delay: 10

    - name: Verify Tempo contains traces sent from OpenTelemetry
      ansible.builtin.uri:
        method: POST
        url: http://127.0.0.1/api/datasources/proxy/uid/{{ grafana_datasources.json[3].uid }}/api/search?q={}&limit=20&start={{ now().timestamp() | int - 3600 }}&end={{ now().timestamp() | int + 3600 }}
        url_password: admin
        url_username: admin
        force_basic_auth: true
        headers:
          Host: grafana.example.com
      register: grafana_tempo_query
      until: 0 < (grafana_tempo_query.json.traces | length)
      retries: 3
      delay: 10
