---
- name: Add Grafana Helm repository
  become: true
  kubernetes.core.helm_repository:
    name: grafana
    repo_url: https://grafana.github.io/helm-charts

- name: Deploy Loki Helm chart
  become: true
  tags:
    - molecule-idempotence-notest
  kubernetes.core.helm:
    name: loki
    chart_ref: grafana/loki
    chart_version: '{{ prometheus_loki_chart_version }}'
    release_namespace: prometheus
    create_namespace: true
    kubeconfig: /etc/rancher/k3s/k3s.yaml
    update_repo_cache: true
    values:
      loki:
        # Disabling auth sets single tenant mode.
        auth_enabled: false
        # Setting replication factor and storage type to enable monolithic mode.
        commonConfig:
          replication_factor: 1
        storage:
          type: filesystem

- name: Deploy Promtail
  become: true
  tags:
    - molecule-idempotence-notest
  kubernetes.core.helm:
    name: promtail
    chart_ref: grafana/promtail
    chart_version: '{{ prometheus_promtail_chart_version }}'
    release_namespace: prometheus
    kubeconfig: /etc/rancher/k3s/k3s.yaml
    update_repo_cache: true
    values:
      config:
        clients:
          - url: http://loki:3100/loki/api/v1/push

- name: Add Prometheus community Helm repository
  become: true
  kubernetes.core.helm_repository:
    name: prometheus-community
    repo_url: https://prometheus-community.github.io/helm-charts

- name: Deploy Prometheus Operator Helm chart
  become: true
  tags:
    - molecule-idempotence-notest
  kubernetes.core.helm:
    name: prometheus
    chart_ref: prometheus-community/kube-prometheus-stack
    chart_version: '{{ prometheus_kube_prometheus_stack_chart_version }}'
    release_namespace: prometheus
    kubeconfig: /etc/rancher/k3s/k3s.yaml
    update_repo_cache: true
    wait: true
    values:
      # Disabled because we are using K3s without etcd.
      kubeEtcd:
        enabled: false

      # Disabled because it requires mounting / of the root filesystem.
      nodeExporter:
        enabled: false

      prometheus:
        prometheusSpec:
          serviceMonitorSelector: '{{ prometheus_service_monitor_selector }}'
          podMonitorSelector: '{{ prometheus_pod_monitor_selector }}'

          storageSpec:
            volumeClaimTemplate:
              spec:
                resources:
                  requests:
                    storage: 10Gi
                volumeMode: Filesystem
                accessModes:
                  - ReadWriteOnce

      grafana:
        adminUser: '{{ prometheus_grafana_user }}'
        adminPassword: '{{ prometheus_grafana_password }}'

        datasources:
          datasources.yaml:
            apiVersion: 1
            datasources:
              - name: Prometheus
                type: prometheus
                url: http://prometheus-kube-prometheus-prometheus.prometheus:9090
              - name: Loki
                type: loki
                url: http://loki:3100

        grafana.ini:
          analytics:
            reporting_enabled: false

        persistence:
          enabled: true

        ingress:
          enabled: true

          annotations:
            cert-manager.io/cluster-issuer: letsencrypt

          hosts:
            - '{{ prometheus_grafana_host }}'

          tls:
            - secretName: grafana-tls
              hosts:
                - '{{ prometheus_grafana_host }}'
